Checks: "clang-diagnostic-*,clang-analyzer-*,-*,clang-diagnostic-*,clang-analyzer-*,bugprone*,modernize*,performance*,readability*,-modernize-pass-by-value,-modernize-use-auto"
WarningsAsErrors: "-*,readability-magic-numbers"
HeaderFilterRegex: ""
AnalyzeTemporaryDtors: false
FormatStyle: none
User: henry
CheckOptions:
    - key: bugprone-argument-comment.CommentBoolLiterals
      value: "0"
    - key: bugprone-argument-comment.CommentCharacterLiterals
      value: "0"
    - key: bugprone-argument-comment.CommentFloatLiterals
      value: "0"
    - key: bugprone-argument-comment.CommentIntegerLiterals
      value: "0"
    - key: bugprone-argument-comment.CommentNullPtrs
      value: "0"
    - key: bugprone-argument-comment.CommentStringLiterals
      value: "0"
    - key: bugprone-argument-comment.CommentUserDefinedLiterals
      value: "0"
    - key: bugprone-argument-comment.IgnoreSingleArgument
      value: "0"
    - key: bugprone-argument-comment.StrictMode
      value: "0"
    - key: bugprone-assert-side-effect.AssertMacros
      value: assert
    - key: bugprone-assert-side-effect.CheckFunctionCalls
      value: "false"
    - key: bugprone-dangling-handle.HandleClasses
      value: "std::basic_string_view;std::experimental::basic_string_view"
    - key: bugprone-dynamic-static-initializers.HeaderFileExtensions
      value: ";h;hh;hpp;hxx"
    - key: bugprone-exception-escape.FunctionsThatShouldNotThrow
      value: ""
    - key: bugprone-exception-escape.IgnoredExceptions
      value: ""
    - key: bugprone-misplaced-widening-cast.CheckImplicitCasts
      value: "false"
    - key: bugprone-narrowing-conversions.PedanticMode
      value: "false"
    - key: bugprone-narrowing-conversions.WarnOnFloatingPointNarrowingConversion
      value: "true"
    - key: bugprone-not-null-terminated-result.WantToUseSafeFunctions
      value: "true"
    - key: bugprone-reserved-identifier.AggressiveDependentMemberLookup
      value: "false"
    - key: bugprone-reserved-identifier.AllowedIdentifiers
      value: ""
    - key: bugprone-reserved-identifier.Invert
      value: "false"
    - key: bugprone-signed-char-misuse.CharTypdefsToIgnore
      value: ""
    - key: bugprone-signed-char-misuse.DiagnoseSignedUnsignedCharComparisons
      value: "true"
    - key: bugprone-sizeof-expression.WarnOnSizeOfCompareToConstant
      value: "true"
    - key: bugprone-sizeof-expression.WarnOnSizeOfConstant
      value: "true"
    - key: bugprone-sizeof-expression.WarnOnSizeOfIntegerExpression
      value: "false"
    - key: bugprone-sizeof-expression.WarnOnSizeOfThis
      value: "true"
    - key: bugprone-string-constructor.LargeLengthThreshold
      value: "8388608"
    - key: bugprone-string-constructor.WarnOnLargeLength
      value: "true"
    - key: bugprone-suspicious-enum-usage.StrictMode
      value: "false"
    - key: bugprone-suspicious-include.HeaderFileExtensions
      value: ";h;hh;hpp;hxx"
    - key: bugprone-suspicious-include.ImplementationFileExtensions
      value: "c;cc;cpp;cxx"
    - key: bugprone-suspicious-missing-comma.MaxConcatenatedTokens
      value: "5"
    - key: bugprone-suspicious-missing-comma.RatioThreshold
      value: "0.200000"
    - key: bugprone-suspicious-missing-comma.SizeThreshold
      value: "5"
    - key: bugprone-suspicious-string-compare.StringCompareLikeFunctions
      value: ""
    - key: bugprone-suspicious-string-compare.WarnOnImplicitComparison
      value: "true"
    - key: bugprone-suspicious-string-compare.WarnOnLogicalNotComparison
      value: "false"
    - key: bugprone-too-small-loop-variable.MagnitudeBitsUpperLimit
      value: "16"
    - key: bugprone-unhandled-self-assignment.WarnOnlyIfThisHasSuspiciousField
      value: "true"
    - key: bugprone-unused-return-value.CheckedFunctions
      value: "::std::async;::std::launder;::std::remove;::std::remove_if;::std::unique;::std::unique_ptr::release;::std::basic_string::empty;::std::vector::empty;::std::back_inserter;::std::distance;::std::find;::std::find_if;::std::inserter;::std::lower_bound;::std::make_pair;::std::map::count;::std::map::find;::std::map::lower_bound;::std::multimap::equal_range;::std::multimap::upper_bound;::std::set::count;::std::set::find;::std::setfill;::std::setprecision;::std::setw;::std::upper_bound;::std::vector::at;::bsearch;::ferror;::feof;::isalnum;::isalpha;::isblank;::iscntrl;::isdigit;::isgraph;::islower;::isprint;::ispunct;::isspace;::isupper;::iswalnum;::iswprint;::iswspace;::isxdigit;::memchr;::memcmp;::strcmp;::strcoll;::strncmp;::strpbrk;::strrchr;::strspn;::strstr;::wcscmp;::access;::bind;::connect;::difftime;::dlsym;::fnmatch;::getaddrinfo;::getopt;::htonl;::htons;::iconv_open;::inet_addr;::isascii;::isatty;::mmap;::newlocale;::openat;::pathconf;::pthread_equal;::pthread_getspecific;::pthread_mutex_trylock;::readdir;::readlink;::recvmsg;::regexec;::scandir;::semget;::setjmp;::shm_open;::shmget;::sigismember;::strcasecmp;::strsignal;::ttyname"
    - key: cert-dcl16-c.NewSuffixes
      value: "L;LL;LU;LLU"
    - key: cert-oop54-cpp.WarnOnlyIfThisHasSuspiciousField
      value: "0"
    - key: cert-str34-c.DiagnoseSignedUnsignedCharComparisons
      value: "0"
    - key: cppcoreguidelines-explicit-virtual-functions.IgnoreDestructors
      value: "1"
    - key: cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
      value: "1"
    - key: google-readability-braces-around-statements.ShortStatementLines
      value: "1"
    - key: google-readability-function-size.StatementThreshold
      value: "800"
    - key: google-readability-namespace-comments.ShortNamespaceLines
      value: "10"
    - key: google-readability-namespace-comments.SpacesBeforeComments
      value: "2"
    - key: llvm-else-after-return.WarnOnConditionVariables
      value: "0"
    - key: llvm-else-after-return.WarnOnUnfixable
      value: "0"
    - key: llvm-qualified-auto.AddConstToQualified
      value: "0"
    - key: modernize-avoid-bind.PermissiveParameterList
      value: "false"
    - key: modernize-loop-convert.MaxCopySize
      value: "16"
    - key: modernize-loop-convert.MinConfidence
      value: reasonable
    - key: modernize-loop-convert.NamingStyle
      value: CamelCase
    - key: modernize-make-shared.IgnoreMacros
      value: "true"
    - key: modernize-make-shared.IncludeStyle
      value: llvm
    - key: modernize-make-shared.MakeSmartPtrFunction
      value: "std::make_shared"
    - key: modernize-make-shared.MakeSmartPtrFunctionHeader
      value: memory
    - key: modernize-make-unique.IgnoreMacros
      value: "true"
    - key: modernize-make-unique.IncludeStyle
      value: llvm
    - key: modernize-make-unique.MakeSmartPtrFunction
      value: "std::make_unique"
    - key: modernize-make-unique.MakeSmartPtrFunctionHeader
      value: memory
    - key: modernize-pass-by-value.IncludeStyle
      value: llvm
    - key: modernize-raw-string-literal.DelimiterStem
      value: lit
    - key: modernize-raw-string-literal.ReplaceShorterLiterals
      value: "false"
    - key: modernize-replace-auto-ptr.IncludeStyle
      value: llvm
    - key: modernize-replace-disallow-copy-and-assign-macro.MacroName
      value: DISALLOW_COPY_AND_ASSIGN
    - key: modernize-replace-random-shuffle.IncludeStyle
      value: llvm
    - key: modernize-use-bool-literals.IgnoreMacros
      value: "true"
    - key: modernize-use-default-member-init.IgnoreMacros
      value: "true"
    - key: modernize-use-default-member-init.UseAssignment
      value: "false"
    - key: modernize-use-emplace.ContainersWithPushBack
      value: "::std::vector;::std::list;::std::deque"
    - key: modernize-use-emplace.IgnoreImplicitConstructors
      value: "false"
    - key: modernize-use-emplace.SmartPointers
      value: "::std::shared_ptr;::std::unique_ptr;::std::auto_ptr;::std::weak_ptr"
    - key: modernize-use-emplace.TupleMakeFunctions
      value: "::std::make_pair;::std::make_tuple"
    - key: modernize-use-emplace.TupleTypes
      value: "::std::pair;::std::tuple"
    - key: modernize-use-equals-default.IgnoreMacros
      value: "true"
    - key: modernize-use-equals-delete.IgnoreMacros
      value: "true"
    - key: modernize-use-nodiscard.ReplacementString
      value: "[[nodiscard]]"
    - key: modernize-use-noexcept.ReplacementString
      value: ""
    - key: modernize-use-noexcept.UseNoexceptFalse
      value: "true"
    - key: modernize-use-nullptr.NullMacros
      value: "NULL"
    - key: modernize-use-override.AllowOverrideAndFinal
      value: "false"
    - key: modernize-use-override.FinalSpelling
      value: final
    - key: modernize-use-override.IgnoreDestructors
      value: "false"
    - key: modernize-use-override.OverrideSpelling
      value: override
    - key: modernize-use-transparent-functors.SafeMode
      value: "false"
    - key: modernize-use-using.IgnoreMacros
      value: "true"
    - key: performance-faster-string-find.StringLikeClasses
      value: "::std::basic_string;::std::basic_string_view"
    - key: performance-for-range-copy.AllowedTypes
      value: ""
    - key: performance-for-range-copy.WarnOnAllAutoCopies
      value: "false"
    - key: performance-inefficient-string-concatenation.StrictMode
      value: "false"
    - key: performance-inefficient-vector-operation.EnableProto
      value: "false"
    - key: performance-inefficient-vector-operation.VectorLikeClasses
      value: "::std::vector"
    - key: performance-move-const-arg.CheckTriviallyCopyableMove
      value: "true"
    - key: performance-move-constructor-init.IncludeStyle
      value: llvm
    - key: performance-no-automatic-move.AllowedTypes
      value: ""
    - key: performance-type-promotion-in-math-fn.IncludeStyle
      value: llvm
    - key: performance-unnecessary-copy-initialization.AllowedTypes
      value: ""
    - key: performance-unnecessary-value-param.AllowedTypes
      value: ""
    - key: performance-unnecessary-value-param.IncludeStyle
      value: llvm
    - key: readability-braces-around-statements.ShortStatementLines
      value: "0"
    - key: readability-else-after-return.WarnOnConditionVariables
      value: "true"
    - key: readability-else-after-return.WarnOnUnfixable
      value: "true"
    - key: readability-function-size.BranchThreshold
      value: "4294967295"
    - key: readability-function-size.LineThreshold
      value: "4294967295"
    - key: readability-function-size.NestingThreshold
      value: "4294967295"
    - key: readability-function-size.ParameterThreshold
      value: "4294967295"
    - key: readability-function-size.StatementThreshold
      value: "800"
    - key: readability-function-size.VariableThreshold
      value: "4294967295"
    - key: readability-identifier-length.MinimumVariableNameLength
      value: "1" 
    - key: readability-identifier-length.MinimumParameterNameLength
      value: "1"
    - key: readability-identifier-naming.AggressiveDependentMemberLookup
      value: "false"
    - key: readability-identifier-naming.IgnoreFailedSplit
      value: "false"
    - key: readability-identifier-naming.IgnoreMainLikeFunctions
      value: "false"
    - key: readability-implicit-bool-conversion.AllowIntegerConditions
      value: "false"
    - key: readability-implicit-bool-conversion.AllowPointerConditions
      value: "false"
    - key: readability-inconsistent-declaration-parameter-name.IgnoreMacros
      value: "true"
    - key: readability-inconsistent-declaration-parameter-name.Strict
      value: "false"
    - key: readability-magic-numbers.IgnoreAllFloatingPointValues
      value: "false"
    - key: readability-magic-numbers.IgnoreBitFieldsWidths
      value: "true"
    - key: readability-magic-numbers.IgnorePowersOf2IntegerValues
      value: "false"
    - key: readability-magic-numbers.IgnoredFloatingPointValues
      value: "1.0;100.0;"
    - key: readability-magic-numbers.IgnoredIntegerValues
      value: "1;2;3;4;"
    - key: readability-qualified-auto.AddConstToQualified
      value: "true"
    - key: readability-redundant-declaration.IgnoreMacros
      value: "true"
    - key: readability-redundant-member-init.IgnoreBaseInCopyConstructors
      value: "false"
    - key: readability-redundant-smartptr-get.IgnoreMacros
      value: "true"
    - key: readability-redundant-string-init.StringNames
      value: "::std::basic_string"
    - key: readability-simplify-boolean-expr.ChainedConditionalAssignment
      value: "false"
    - key: readability-simplify-boolean-expr.ChainedConditionalReturn
      value: "false"
    - key: readability-simplify-subscript-expr.Types
      value: "::std::basic_string;::std::basic_string_view;::std::vector;::std::array"
    - key: readability-static-accessed-through-instance.NameSpecifierNestingThreshold
      value: "3"
    - key: readability-uppercase-literal-suffix.IgnoreMacros
      value: "true"
    - key: readability-uppercase-literal-suffix.NewSuffixes
      value: ""
      # check naming conventions according to google standard: https://google.github.io/styleguide/cppguide.html#Naming
      # copied from: https://github.com/googleapis/google-cloud-cpp/blob/master/.clang-tidy
    - key: readability-identifier-naming.NamespaceCase
      value: lower_case
    - key: readability-identifier-naming.ClassCase
      value: CamelCase
    - key: readability-identifier-naming.StructCase
      value: CamelCase
    - key: readability-identifier-naming.TemplateParameterCase
      value: CamelCase
    - key: readability-identifier-naming.FunctionCase
      value: aNy_CasE
    - key: readability-identifier-naming.VariableCase
      value: lower_case
    - key: readability-identifier-naming.ClassMemberCase
      value: lower_case
    - key: readability-identifier-naming.ClassMemberSuffix
      value: _
    - key: readability-identifier-naming.PrivateMemberSuffix
      value: _
    - key: readability-identifier-naming.ProtectedMemberSuffix
      value: _
    - key: readability-identifier-naming.EnumConstantCase
      value: CamelCase
    - key: readability-identifier-naming.EnumConstantPrefix
      value: k
    - key: readability-identifier-naming.ConstexprVariableCase
      value: CamelCase
    - key: readability-identifier-naming.ConstexprVariablePrefix
      value: k
    - key: readability-identifier-naming.GlobalConstantCase
      value: CamelCase
    - key: readability-identifier-naming.GlobalConstantPrefix
      value: k
    - key: readability-identifier-naming.MemberConstantCase
      value: CamelCase
    - key: readability-identifier-naming.MemberConstantPrefix
      value: k
    - key: readability-identifier-naming.StaticConstantCase
      value: CamelCase
    - key: readability-identifier-naming.StaticConstantPrefix
      value: k
